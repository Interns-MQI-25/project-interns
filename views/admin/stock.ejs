<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Management - Marquardt India Pvt. Ltd.</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/responsive.css">
    <!-- SheetJS for Excel export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
</head>
<body class="bg-gray-50">
    <%- include('../partials/navbar') %>
    
    <main class="ml-0 lg:ml-64 p-4 sm:p-6">
        <%- include('../partials/messages') %>
        
        <div class="mb-8">
            <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">Stock Management</h1>
            <p class="text-gray-600">Manage and track inventory</p>
            <p class="text-gray-600">Complete oversight of inventory and analytics</p>
        </div>

        <!-- Stock Analytics -->
        <% if (typeof stockStats !== 'undefined' && stockStats && stockStats.length > 0) { %>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
            <% stockStats.forEach(stat => { %>
                <div class="bg-white overflow-hidden shadow rounded-lg">
                    <div class="p-5">
                        <div class="flex items-center">
                            <div class="flex-shrink-0">
                                <i class="fas fa-cube text-2xl text-purple-600"></i>
                            </div>
                            <div class="ml-5 w-0 flex-1">
                                <dl>
                                    <dt class="text-sm font-medium text-gray-500 truncate">
                                        <%= stat.asset_type %>
                                    </dt>
                                    <dd>
                                        <div class="text-lg font-medium text-gray-900">
                                            Available: <%= stat.available_quantity %> items
                                            
                                        </div>
                                        <div class="text-xs text-gray-500">
                                            Total items: <%= stat.total_items %> 
                                            
                                        </div>
                                        <% if (stat.calibration_items > 0) { %>
                                            <div class="text-xs text-orange-600">
                                                Cal Req: <%= stat.calibration_items %>
                                            </div>
                                        <% } %>
                                        <% if (stat.overdue_calibrations > 0) { %>
                                            <div class="text-xs text-red-600">
                                                Overdue: <%= stat.overdue_calibrations %>
                                            </div>
                                        <% } %>
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
        <% } %>

        <!-- Stock Management Content -->
        <div class="mb-4">
            <div class="flex flex-col md:flex-row gap-4">
                <div class="flex-1">
                    <input type="text" id="productFilter" placeholder="Search products..." class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div class="flex-1">
                    <select id="assetTypeFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500">
                        <option value="">Select Asset Type</option>
                        <option value="Accessories">Accessories</option>
                        <option value="Consumables">Consumables</option>
                        <option value="Embedded Devices">Embedded Devices</option>
                        <option value="Hardware">Hardware</option>
                        <option value="Infrastructure">Infrastructure</option>
                        <option value="IT Equipment">IT Equipment</option>
                        <option value="Lab Equipment">Lab Equipment</option>
                        <option value="Laptop">Laptop</option>
                        <option value="License">License</option>
                        <option value="Measuring Instruments">Measuring Instruments</option>
                        <option value="Misc">Miscellaneous</option>
                        <option value="Network Equipment">Network Equipment</option>
                        <option value="Prototypes">Prototypes</option>
                        <option value="Software">Software</option>
                        <option value="Test Equipment">Test Equipment</option>
                        <option value="Tooling">Tooling</option>
                        <option value="Vehicle Equipment">Vehicle Equipment</option>            
                    </select>
                </div>
                <div class="flex-1">
                    <select id="calibrationFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500">
                        <option value="">All Calibration Status</option>
                        <option value="Overdue">Overdue</option>
                        <option value="Due Soon">Due Soon</option>
                        <option value="Current">Current</option>
                        <option value="Not Required">Not Required</option>
                    </select>
                </div>
                <div class="flex gap-2">
                    <button onclick="exportToExcel()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 focus:ring-2 focus:ring-green-500">
                        <i class="fas fa-file-excel mr-2"></i>Export to Excel
                    </button>
                </div>
            </div>
        </div>

        <div class="overflow-x-auto max-h-[600px] overflow-y-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50 sticky top-0 z-10">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Product Details
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Asset Type
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Serial/Model
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Total Stock
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Currently Assigned
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Available
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Calibration
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Added By
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Added Date
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="productTableBody">
                    <% if (products && products.length > 0) { %>
                        <% products.forEach(product => { %>
                            <tr class="product-row" 
                                data-product-name="<%= product.product_name.toLowerCase() %>"
                                data-asset-type="<%= product.asset_type %>"
                                data-calibration-status="<%= product.calibration_required ? product.calibration_status : 'Not Required' %>">
                                <td class="px-6 py-4 align-top" style="white-space:normal; word-break:break-word; max-width: 250px;">
                                    <div class="text-sm font-medium text-gray-900 break-words whitespace-normal leading-tight">
                                        <%= product.product_name %>
                                    </div>
                                    <div class="text-sm text-gray-500 break-words whitespace-normal">
                                        <%= product.product_category %>
                                    </div>
                                    <% if (product.description) { %>
                                        <div class="text-xs text-gray-400 break-words whitespace-normal">
                                            <%= product.description %>
                                        </div>
                                    <% } %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                        <%= product.asset_type %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <div><strong>SN:</strong> <%= product.serial_number || 'N/A' %></div>
                                    <div><strong>Model:</strong> <%= product.model_number || 'N/A' %></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <span class="font-semibold"><%= product.total_quantity || product.quantity || 0 %></span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <span class="font-semibold text-yellow-600"><%= product.currently_assigned || 0 %></span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <span class="font-semibold text-green-600"><%= product.quantity || 0 %></span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <% if (product.calibration_required) { %>
                                        <% if (product.calibration_status === 'Overdue') { %>
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                                Overdue
                                            </span>
                                        <% } else if (product.calibration_status === 'Due Soon') { %>
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                                Due Soon
                                            </span>
                                        <% } else { %>
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                Current
                                            </span>
                                        <% } %>
                                        <div class="text-xs text-gray-400">
                                            <%= product.calibration_frequency || 'N/A' %>
                                        </div>
                                    <% } else { %>
                                        <span class="text-gray-400">Not Required</span>
                                    <% } %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <%= product.added_by_name || 'System' %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <%= new Date(product.added_at).toLocaleDateString() %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <button onclick="editProduct('<%= product.product_id %>')" class="text-indigo-600 hover:text-indigo-900 mr-3">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="10" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                                No products found
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- Edit Product Modal -->
        <div id="editProductModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
            <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
                <div class="mt-3">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-medium text-gray-900">Edit Product Details</h3>
                        <button id="closeEditModal" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <form id="editProductForm" method="POST" class="space-y-4">
                        <input type="hidden" id="edit_product_id" name="product_id">
                        
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <!-- Product Name -->
                            <div class="sm:col-span-2">
                                <label for="edit_product_name" class="block text-sm font-medium text-gray-700">Product Name *</label>
                                <input type="text" id="edit_product_name" name="product_name" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Product Category -->
                            <div>
                                <label for="edit_product_category" class="block text-sm font-medium text-gray-700">Category</label>
                                <input type="text" id="edit_product_category" name="product_category" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Asset Type -->
                            <div>
                                <label for="edit_asset_type" class="block text-sm font-medium text-gray-700">Asset Type *</label>
                                <select id="edit_asset_type" name="asset_type" required 
                                        class="mt-1 block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                                    <option value="">Select Asset Type</option>
                                    <option value="Accessories">Accessories</option>
                                    <option value="Consumables">Consumables</option>
                                    <option value="Embedded Devices">Embedded Devices</option>
                                    <option value="Hardware">Hardware</option>
                                    <option value="Infrastructure">Infrastructure</option>
                                    <option value="IT Equipment">IT Equipment</option>
                                    <option value="Lab Equipment">Lab Equipment</option>
                                    <option value="Laptop">Laptop</option>
                                    <option value="License">License</option>
                                    <option value="Measuring Instruments">Measuring Instruments</option>
                                    <option value="Misc">Miscellaneous</option>
                                    <option value="Network Equipment">Network Equipment</option>
                                    <option value="Prototypes">Prototypes</option>
                                    <option value="Software">Software</option>
                                    <option value="Test Equipment">Test Equipment</option>
                                    <option value="Tooling">Tooling</option>
                                    <option value="Vehicle Equipment">Vehicle Equipment</option>
                                </select>
                            </div>

                            <!-- Serial Number -->
                            <div>
                                <label for="edit_serial_number" class="block text-sm font-medium text-gray-700">Serial Number</label>
                                <input type="text" id="edit_serial_number" name="serial_number" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Model Number -->
                            <div>
                                <label for="edit_model_number" class="block text-sm font-medium text-gray-700">Model Number</label>
                                <input type="text" id="edit_model_number" name="model_number" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Quantity -->
                            <div>
                                <label for="edit_quantity" class="block text-sm font-medium text-gray-700">Available Quantity *</label>
                                <input type="number" id="edit_quantity" name="quantity" required min="0" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Calibration Required -->
                            <div>
                                <label for="edit_calibration_required" class="block text-sm font-medium text-gray-700">Calibration Required</label>
                                <select id="edit_calibration_required" name="calibration_required" 
                                        class="mt-1 block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                                    <option value="0">No</option>
                                    <option value="1">Yes</option>
                                </select>
                            </div>

                            <!-- Calibration Frequency -->
                            <div id="calibration_freq_group" style="display: none;">
                                <label for="edit_calibration_frequency" class="block text-sm font-medium text-gray-700">Calibration Frequency</label>
                                <input type="text" id="edit_calibration_frequency" name="calibration_frequency" placeholder="e.g., Annual, Monthly" 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            </div>

                            <!-- Description -->
                            <div class="sm:col-span-2">
                                <label for="edit_description" class="block text-sm font-medium text-gray-700">Description</label>
                                <textarea id="edit_description" name="description" rows="3" 
                                          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"></textarea>
                            </div>
                        </div>

                        <div class="flex justify-end space-x-2 pt-4">
                            <button type="button" id="cancelEditBtn" class="px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                Cancel
                            </button>
                            <button type="submit" class="px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                                <i class="fas fa-save mr-2"></i>Update Product
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <script>
        const productFilter = document.getElementById('productFilter');
        const assetTypeFilter = document.getElementById('assetTypeFilter');
        const calibrationFilter = document.getElementById('calibrationFilter');
        const productRows = document.querySelectorAll('.product-row');

        function filterProducts() {
            const searchTerm = productFilter.value.toLowerCase();
            const assetType = assetTypeFilter.value;
            const calibrationStatus = calibrationFilter.value;

            productRows.forEach(row => {
                const productName = row.dataset.productName;
                const rowAssetType = row.dataset.assetType;
                const rowCalibrationStatus = row.dataset.calibrationStatus;

                const matchesSearch = productName.includes(searchTerm);
                const matchesAssetType = !assetType || rowAssetType === assetType;
                const matchesCalibration = !calibrationStatus || rowCalibrationStatus === calibrationStatus;

                if (matchesSearch && matchesAssetType && matchesCalibration) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

        productFilter.addEventListener('input', filterProducts);
        assetTypeFilter.addEventListener('change', filterProducts);
        calibrationFilter.addEventListener('change', filterProducts);

        // Export to Excel functionality
        function exportToExcel() {
            const visibleRows = document.querySelectorAll('.product-row:not([style*="display: none"])');
            
            if (visibleRows.length === 0) {
                alert('No products to export. Please adjust your filters.');
                return;
            }

            const data = [];
            
            // Add headers
            data.push([
                'Product Name',
                'Category',
                'Asset Type',
                'Serial Number',
                'Model Number',
                'Total Stock',
                'Currently Assigned',
                'Available',
                'Calibration Status',
                'Calibration Frequency',
                'Description',
                'Added By',
                'Added Date'
            ]);

            // Add data rows
            visibleRows.forEach(row => {
                const cells = row.querySelectorAll('td');
                const productNameCell = cells[0];
                const productName = productNameCell.querySelector('.text-sm.font-medium').textContent.trim();
                const category = productNameCell.querySelector('.text-sm.text-gray-500').textContent.trim();
                const description = productNameCell.querySelector('.text-xs.text-gray-400') ? 
                    productNameCell.querySelector('.text-xs.text-gray-400').textContent.trim() : '';
                
                const assetType = row.dataset.assetType;
                
                const serialModelCell = cells[2];
                const serialNumber = serialModelCell.innerHTML.includes('<strong>SN:</strong>') ? 
                    serialModelCell.innerHTML.split('<strong>SN:</strong>')[1].split('<div>')[0].trim() : 'N/A';
                const modelNumber = serialModelCell.innerHTML.includes('<strong>Model:</strong>') ? 
                    serialModelCell.innerHTML.split('<strong>Model:</strong>')[1].split('</div>')[0].trim() : 'N/A';
                
                const totalStock = cells[3].textContent.trim();
                const assigned = cells[4].textContent.trim();
                const available = cells[5].textContent.trim();
                
                const calibrationCell = cells[6];
                let calibrationStatus = 'Not Required';
                let calibrationFreq = 'N/A';
                
                if (calibrationCell.querySelector('span')) {
                    calibrationStatus = calibrationCell.querySelector('span').textContent.trim();
                    if (calibrationCell.querySelector('.text-xs.text-gray-400')) {
                        calibrationFreq = calibrationCell.querySelector('.text-xs.text-gray-400').textContent.trim();
                    }
                }
                
                const addedBy = cells[7].textContent.trim();
                const addedDate = cells[8].textContent.trim();

                data.push([
                    productName,
                    category,
                    assetType,
                    serialNumber,
                    modelNumber,
                    totalStock,
                    assigned,
                    available,
                    calibrationStatus,
                    calibrationFreq,
                    description,
                    addedBy,
                    addedDate
                ]);
            });

            // Create workbook and worksheet
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.aoa_to_sheet(data);

            // Set column widths
            const colWidths = [
                { wch: 25 }, // Product Name
                { wch: 15 }, // Category
                { wch: 12 }, // Asset Type
                { wch: 15 }, // Serial Number
                { wch: 15 }, // Model Number
                { wch: 12 }, // Total Stock
                { wch: 15 }, // Currently Assigned
                { wch: 10 }, // Available
                { wch: 15 }, // Calibration Status
                { wch: 15 }, // Calibration Frequency
                { wch: 30 }, // Description
                { wch: 15 }, // Added By
                { wch: 12 }  // Added Date
            ];
            ws['!cols'] = colWidths;

            // Style the header row
            const headerRange = XLSX.utils.decode_range(ws['!ref']);
            for (let col = headerRange.s.c; col <= headerRange.e.c; col++) {
                const cellAddress = XLSX.utils.encode_cell({ r: 0, c: col });
                if (!ws[cellAddress]) continue;
                ws[cellAddress].s = {
                    font: { bold: true },
                    fill: { fgColor: { rgb: "E5E7EB" } },
                    alignment: { horizontal: "center" }
                };
            }

            // Add the worksheet to the workbook
            XLSX.utils.book_append_sheet(wb, ws, 'Stock Management');

            // Generate filename
            const currentDate = new Date().toISOString().split('T')[0];
            const filename = `Stock_Management_${currentDate}.xlsx`;

            // Save the file
            XLSX.writeFile(wb, filename);

            // Show success message briefly
            const originalButton = document.querySelector('button[onclick="exportToExcel()"]');
            const originalText = originalButton.innerHTML;
            originalButton.innerHTML = '<i class="fas fa-check mr-2"></i>Exported!';
            originalButton.className = originalButton.className.replace('bg-green-600', 'bg-green-700');
            
            setTimeout(() => {
                originalButton.innerHTML = originalText;
                originalButton.className = originalButton.className.replace('bg-green-700', 'bg-green-600');
            }, 2000);
        }

        // Edit Product Modal functionality
        const editModal = document.getElementById('editProductModal');
        const closeEditBtn = document.getElementById('closeEditModal');
        const cancelEditBtn = document.getElementById('cancelEditBtn');
        const editForm = document.getElementById('editProductForm');
        const calibrationRequiredSelect = document.getElementById('edit_calibration_required');
        const calibrationFreqGroup = document.getElementById('calibration_freq_group');

        // Show/hide calibration frequency based on calibration required
        calibrationRequiredSelect.addEventListener('change', function() {
            if (this.value === '1') {
                calibrationFreqGroup.style.display = 'block';
            } else {
                calibrationFreqGroup.style.display = 'none';
            }
        });

        function editProduct(productId) {
            // Find the product row
            const productRow = document.querySelector(`button[onclick="editProduct('${productId}')"]`).closest('tr');
            const cells = productRow.querySelectorAll('td');
            
            // Extract product data from the row
            const productNameCell = cells[0];
            const productName = productNameCell.querySelector('.text-sm.font-medium').textContent.trim();
            const category = productNameCell.querySelector('.text-sm.text-gray-500').textContent.trim();
            const description = productNameCell.querySelector('.text-xs.text-gray-400') ? 
                productNameCell.querySelector('.text-xs.text-gray-400').textContent.trim() : '';
            
            const assetType = productRow.dataset.assetType;
            
            const serialModelCell = cells[2];
            const serialNumber = serialModelCell.innerHTML.includes('<strong>SN:</strong>') ? 
                serialModelCell.innerHTML.split('<strong>SN:</strong>')[1].split('<div>')[0].trim() : '';
            const modelNumber = serialModelCell.innerHTML.includes('<strong>Model:</strong>') ? 
                serialModelCell.innerHTML.split('<strong>Model:</strong>')[1].split('</div>')[0].trim() : '';
            
            const availableQuantity = cells[5].textContent.trim();
            
            // Check calibration info
            const calibrationCell = cells[6];
            let calibrationRequired = false;
            let calibrationFreq = '';
            
            if (calibrationCell.querySelector('span') && !calibrationCell.textContent.includes('Not Required')) {
                calibrationRequired = true;
                if (calibrationCell.querySelector('.text-xs.text-gray-400')) {
                    calibrationFreq = calibrationCell.querySelector('.text-xs.text-gray-400').textContent.trim();
                }
            }

            // Populate the modal form
            document.getElementById('edit_product_id').value = productId;
            document.getElementById('edit_product_name').value = productName;
            document.getElementById('edit_product_category').value = category;
            document.getElementById('edit_asset_type').value = assetType;
            document.getElementById('edit_serial_number').value = serialNumber === 'N/A' ? '' : serialNumber;
            document.getElementById('edit_model_number').value = modelNumber === 'N/A' ? '' : modelNumber;
            document.getElementById('edit_quantity').value = availableQuantity;
            document.getElementById('edit_calibration_required').value = calibrationRequired ? '1' : '0';
            document.getElementById('edit_calibration_frequency').value = calibrationFreq === 'N/A' ? '' : calibrationFreq;
            document.getElementById('edit_description').value = description;

            // Show/hide calibration frequency
            if (calibrationRequired) {
                calibrationFreqGroup.style.display = 'block';
            } else {
                calibrationFreqGroup.style.display = 'none';
            }

            // Set form action
            editForm.action = `/admin/update-product/${productId}`;
            
            // Show modal
            editModal.classList.remove('hidden');
        }

        // Close modal functionality
        closeEditBtn.addEventListener('click', () => {
            editModal.classList.add('hidden');
        });

        cancelEditBtn.addEventListener('click', () => {
            editModal.classList.add('hidden');
        });

        // Close modal when clicking outside
        editModal.addEventListener('click', (e) => {
            if (e.target === editModal) {
                editModal.classList.add('hidden');
            }
        });

        // Form submission
        editForm.addEventListener('submit', function(e) {
            // Don't prevent default - let the form submit normally
            // This ensures compatibility with the backend redirect handling
            
            // Show loading state
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Updating...';
            submitBtn.disabled = true;
            
            // The form will submit normally and the page will redirect/reload
        });
        </script>            </div>
        </div>
    </main>
</body>
</html>
