<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Products - Marquardt India Pvt. Ltd.</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/responsive.css">
</head>
<body class="bg-gray-50">
    <%- include('../partials/navbar') %>
    
    <main class="ml-0 md:ml-64 p-4 sm:p-6">
        <%- include('../partials/messages') %>
        
        <div class="mb-6">
            <div class="flex justify-between items-center">
                <div>
                    <h1 class="text-2xl sm:text-3xl font-bold text-gray-900" style="pointer-events:none; user-select:text;">Upload Products</h1>
                    <p class="text-gray-600" style="pointer-events:none; user-select:text;">Bulk upload products using Excel file</p>
                </div>
                <div class="flex gap-2">
                    <a href="/admin/stock" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Back to Stock
                    </a>
                </div>
            </div>
        </div>

        <!-- Instructions Card -->
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6">
            <h3 class="text-lg font-semibold text-blue-800 mb-3">
                <i class="fas fa-info-circle mr-2"></i>
                How to Add Products via Excel Upload
            </h3>
            <div class="text-blue-700 space-y-2">
                <p><strong>1.</strong> <span class="font-semibold text-blue-900">To add new products, download the template Excel file below.</span></p>
                <p><strong>2.</strong> Fill in your product data using the <span class="font-semibold">exact column names</span> provided in the template. <span class="text-red-700">All column names must match exactly (case-sensitive).</span></p>
                <p><strong>3.</strong> Once your data is ready, upload the completed file using the form below. <span class="font-semibold text-blue-900">All products in the uploaded file will be directly added to the inventory.</span></p>
                <p><strong>4.</strong> Required columns: <code class="bg-blue-100 px-1 rounded">product_name</code>, <code class="bg-blue-100 px-1 rounded">asset_type</code></p>
                <p><strong>5.</strong> <span class="text-red-600 font-semibold">Note:</span> <code class="bg-red-100 px-1 rounded">added_by</code> and <code class="bg-red-100 px-1 rounded">inwarded_by</code> will be automatically set to current admin. Leave empty or use any text.</p>
                <p><strong>6.</strong> <span class="text-red-600 font-semibold">Date Format:</span> Excel date serial numbers (like 45627) will be automatically converted to proper dates.</p>
                <p><strong>7.</strong> Accepted file types: Excel (.xlsx, .xls) or CSV. Maximum file size: 10MB</p>
            </div>
        </div>

        <!-- Template Download -->
        <div class="bg-white shadow rounded-lg p-6 mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-download mr-2"></i>
                Download Template
            </h3>
            <p class="text-gray-600 mb-4">Download the Excel template with the correct column structure and sample data.</p>
            <a href="/admin/download-template" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700">
                <i class="fas fa-file-excel mr-2"></i>
                Download Excel Template
            </a>
        </div>

        <!-- Column Information -->
        <div class="bg-white shadow rounded-lg p-6 mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-table mr-2"></i>
                Required Column Structure
            </h3>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Column Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Data Type</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Required</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Example</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% columns.forEach(column => { %>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                <%= column.COLUMN_NAME %>
                                <% if (column.COLUMN_NAME === 'product_name' || column.COLUMN_NAME === 'asset_type') { %>
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 ml-2">Required</span>
                                <% } %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= column.DATA_TYPE %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <% if (column.COLUMN_NAME === 'added_by' || column.COLUMN_NAME === 'inwarded_by') { %>
                                    <span class="text-[#009A9A]">Auto-set</span>
                                <% } else { %>
                                    <%= column.IS_NULLABLE === 'NO' ? 'Yes' : 'No' %>
                                <% } %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <% 
                                const examples = {
                                    'item_number': '1001',
                                    'asset_type': 'Hardware',
                                    'product_category': 'Testing Equipment',
                                    'product_name': 'Digital Multimeter',
                                    'model_number': 'DMM-2000',
                                    'serial_number': 'SN123456',
                                    'is_available': 'true',
                                    'quantity': '1',
                                    'added_by': 'Auto-set (ignore)',
                                    'inwarded_by': 'Auto-set (ignore)',
                                    'calibration_required': 'Yes/No',
                                    'calibration_frequency': '1 Year',
                                    'calibration_due_date': '2025-12-31 or 45627',
                                    'pr_no': '1234',
                                    'po_number': 'PO-2024-001',
                                    'inward_date': '2024-01-15 or 45627',
                                    'version_number': 'v1.0',
                                    'software_license_type': 'Standard',
                                    'license_start': '2024-01-01 or 45627',
                                    'renewal_frequency': '1 Year',
                                    'next_renewal_date': '2025-01-01 or 45627'
                                };
                                %>
                                <%= examples[column.COLUMN_NAME] || '-' %>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Upload Form -->
        <div class="bg-white shadow rounded-lg p-6">
            <div class="mb-4">
                <div class="flex items-center bg-yellow-100 border-l-4 border-yellow-500 p-4 rounded">
                    <i class="fas fa-exclamation-circle text-yellow-600 mr-3"></i>
                    <span class="text-yellow-800 font-semibold">This upload will <span class="underline">directly add new products to the inventory</span>. Please double-check your data before submitting.</span>
                </div>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 mb-4">
                <i class="fas fa-upload mr-2"></i>
                Upload Excel/CSV File
            </h3>
            <form action="/admin/upload-products" method="POST" enctype="multipart/form-data" class="space-y-4">
                <div>
                    <label for="excelFile" class="block text-sm font-medium text-gray-700 mb-2">
                        Select Excel or CSV File
                    </label>
                    <div class="flex items-center justify-center w-full">
                        <label for="excelFile" class="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                            <div class="flex flex-col items-center justify-center pt-5 pb-6">
                                <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mb-4"></i>
                                <p class="mb-2 text-sm text-gray-500">
                                    <span class="font-semibold">Click to upload</span> or drag and drop
                                </p>
                                <p class="text-xs text-gray-500">Excel files (.xlsx, .xls) or CSV (Max 10MB)</p>
                                <p id="selectedFileName" class="text-sm text-[#009A9A] mt-2 hidden"></p>
                            </div>
                            <input id="excelFile" name="excelFile" type="file" class="hidden" accept=".xlsx,.xls,.csv" required />
                        </label>
                    </div>
                </div>
                <div class="flex items-center justify-between">
                    <div class="text-sm text-gray-600">
                        <i class="fas fa-exclamation-triangle text-yellow-500 mr-1"></i>
                        Make sure all column names match exactly before uploading.
                    </div>
                    <button type="submit" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white hover:bg-opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2" style="background-color: #009A9A;">
                        <i class="fas fa-upload mr-2"></i>
                        Upload Products
                    </button>
                </div>
            </form>
        </div>
    </main>

    <script>
</script>

<script>
window.addEventListener("DOMContentLoaded",function(){
    (messages.error || []).forEach(msg => { alert(msg); });
    (messages.success || []).forEach(msg => { alert(msg); });
    (messages.warning || []).forEach(msg => { alert(msg); });
    (messages.info || []).forEach(msg => { alert(msg); });
});

// Handle file selection
document.getElementById('excelFile').addEventListener('change', function(e) {
    const fileName = e.target.files[0]?.name;
    const fileNameDisplay = document.getElementById('selectedFileName');
    if (fileName) {
        fileNameDisplay.textContent = `Selected: ${fileName}`;
        fileNameDisplay.classList.remove('hidden');
    } else {
        fileNameDisplay.classList.add('hidden');
    }
});

// Handle drag and drop
const dropArea = document.querySelector('label[for="excelFile"]');
['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, preventDefaults, false);
});
function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
}
['dragenter', 'dragover'].forEach(eventName => {
    dropArea.addEventListener(eventName, highlight, false);
});
['dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, unhighlight, false);
});
function highlight(e) {
    dropArea.classList.add('border-blue-500', 'bg-blue-50');
}
function unhighlight(e) {
    dropArea.classList.remove('border-blue-500', 'bg-blue-50');
}
dropArea.addEventListener('drop', handleDrop, false);
function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;
    if (files.length > 0) {
        document.getElementById('excelFile').files = files;
        const fileName = files[0].name;
        const fileNameDisplay = document.getElementById('selectedFileName');
        fileNameDisplay.textContent = `Selected: ${fileName}`;
        fileNameDisplay.classList.remove('hidden');
    }
}
</script>
</html>
</body>
</html>
